import { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Progress } from '@/components/ui/progress';
import { Input } from '@/components/ui/input';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Gift, Calendar, Users, Target, ArrowRight, CheckCircle, Search, Filter, Calculator } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';

interface SubsidiesProps {
  currentLanguage: string;
}

interface SubsidyScheme {
  name: string;
  description: string;
  subsidyPercent: number;
  maxAmount: string;
  eligibility: string[];
  documents: string[];
  deadline?: string;
  beneficiaries: number;
  category: 'pesticide' | 'fertilizer' | 'seeds' | 'equipment' | 'irrigation';
  status: 'active' | 'closing-soon' | 'upcoming';
}

const subsidySchemes: SubsidyScheme[] = [
  {
    name: 'Pesticide Subsidy Scheme',
    description: 'Financial assistance for purchasing organic and bio-pesticides to promote sustainable farming',
    subsidyPercent: 50,
    maxAmount: '‚Çπ10,000',
    eligibility: ['Small & Marginal farmers', 'Certified organic farmers', 'FPO members'],
    documents: ['Aadhaar Card', 'Land Records', 'Bank Details', 'Previous purchase bills'],
    deadline: '2024-12-31',
    beneficiaries: 2456,
    category: 'pesticide',
    status: 'active'
  },
  {
    name: 'Organic Fertilizer Promotion',
    description: 'Subsidy on vermicompost, organic fertilizers, and bio-fertilizers',
    subsidyPercent: 75,
    maxAmount: '‚Çπ15,000',
    eligibility: ['All category farmers', 'Organic certification holders'],
    documents: ['Farmer ID', 'Soil health card', 'Purchase receipts'],
    deadline: '2025-01-15',
    beneficiaries: 3241,
    category: 'fertilizer',
    status: 'active'
  },
  {
    name: 'Quality Seed Distribution',
    description: 'Subsidized high-yielding variety seeds and hybrid seeds for better productivity',
    subsidyPercent: 85,
    maxAmount: '‚Çπ5,000',
    eligibility: ['BPL farmers', 'Women farmers', 'SC/ST farmers'],
    documents: ['BPL Card', 'Caste certificate (if applicable)', 'Land documents'],
    beneficiaries: 5678,
    category: 'seeds',
    status: 'closing-soon'
  },
  {
    name: 'Drip Irrigation Subsidy',
    description: 'Financial support for installing micro-irrigation systems to promote water conservation',
    subsidyPercent: 55,
    maxAmount: '‚Çπ50,000',
    eligibility: ['Farmers with >1 acre land', 'Water availability certificate'],
    documents: ['Land records', 'Water source proof', 'Technical approval'],
    deadline: '2024-11-30',
    beneficiaries: 1892,
    category: 'irrigation',
    status: 'closing-soon'
  }
];

const categoryIcons = {
  pesticide: 'üåø',
  fertilizer: 'üß™', 
  seeds: 'üå±',
  equipment: 'üöú',
  irrigation: 'üíß'
};

const categoryColors = {
  pesticide: 'bg-primary/10 text-primary',
  fertilizer: 'bg-secondary/10 text-secondary',
  seeds: 'bg-success/10 text-success',
  equipment: 'bg-accent/10 text-accent',
  irrigation: 'bg-primary/10 text-primary'
};

const statusColors = {
  active: 'bg-success/10 text-success',
  'closing-soon': 'bg-warning/10 text-warning',
  upcoming: 'bg-accent/10 text-accent'
};

const Subsidies = ({ currentLanguage }: SubsidiesProps) => {
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedCategory, setSelectedCategory] = useState<string>('all');
  const [selectedStatus, setSelectedStatus] = useState<string>('all');
  const [budget, setBudget] = useState<string>('');
  const [showCalculator, setShowCalculator] = useState(false);
  const { toast } = useToast();

  const translations = {
    en: {
      title: 'Government Subsidies',
      description: 'Access financial assistance for pesticides, fertilizers, seeds, and farming equipment',
      search: 'Search subsidies by name or description...',
      category: 'Category',
      status: 'Status',
      calculator: 'Calculator',
      subsidyCalculator: 'Subsidy Calculator',
      calculateBenefits: 'Calculate potential benefits for your investment',
      investmentAmount: 'Investment Amount (‚Çπ)',
      potentialBenefits: 'Potential Benefits:',
      activeSchemes: 'Active Schemes',
      totalBeneficiaries: 'Total Beneficiaries',
      avgSubsidy: 'Avg Subsidy',
      amountDisbursed: 'Amount Disbursed',
      subsidyRate: 'Subsidy Rate',
      maxAmount: 'Max Amount',
      beneficiaries: 'Beneficiaries',
      applicationDeadline: 'Application Deadline',
      eligibilityCriteria: 'Eligibility Criteria',
      viewDetails: 'View Details',
      applyNow: 'Apply Now',
      comingSoon: 'Coming Soon',
      getApplicationHelp: 'Get Application Help',
      downloadForms: 'Download Forms',
      needHelp: 'Need Help with Applications?',
      fieldOfficersHelp: 'Our field officers are available to assist you with subsidy applications and documentation'
    },
    hi: {
      title: '‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§∏‡§¨‡•ç‡§∏‡§ø‡§°‡•Ä',
      description: '‡§ï‡•Ä‡§ü‡§®‡§æ‡§∂‡§ï, ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï, ‡§¨‡•Ä‡§ú ‡§î‡§∞ ‡§ï‡•É‡§∑‡§ø ‡§â‡§™‡§ï‡§∞‡§£‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞‡•á‡§Ç',
      search: '‡§®‡§æ‡§Æ ‡§Ø‡§æ ‡§µ‡§ø‡§µ‡§∞‡§£ ‡§ï‡•á ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§∏‡§¨‡•ç‡§∏‡§ø‡§°‡•Ä ‡§ñ‡•ã‡§ú‡•á‡§Ç...',
      category: '‡§∂‡•ç‡§∞‡•á‡§£‡•Ä',
      status: '‡§∏‡•ç‡§•‡§ø‡§§‡§ø',
      calculator: '‡§ï‡•à‡§≤‡§ï‡•Å‡§≤‡•á‡§ü‡§∞',
      subsidyCalculator: '‡§∏‡§¨‡•ç‡§∏‡§ø‡§°‡•Ä ‡§ï‡•à‡§≤‡§ï‡•Å‡§≤‡•á‡§ü‡§∞',
      calculateBenefits: '‡§Ö‡§™‡§®‡•á ‡§®‡§ø‡§µ‡•á‡§∂ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡§Ç‡§≠‡§æ‡§µ‡§ø‡§§ ‡§≤‡§æ‡§≠‡•ã‡§Ç ‡§ï‡•Ä ‡§ó‡§£‡§®‡§æ ‡§ï‡§∞‡•á‡§Ç',
      investmentAmount: '‡§®‡§ø‡§µ‡•á‡§∂ ‡§∞‡§æ‡§∂‡§ø (‚Çπ)',
      potentialBenefits: '‡§∏‡§Ç‡§≠‡§æ‡§µ‡§ø‡§§ ‡§≤‡§æ‡§≠:',
      activeSchemes: '‡§∏‡§ï‡•ç‡§∞‡§ø‡§Ø ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç',
      totalBeneficiaries: '‡§ï‡•Å‡§≤ ‡§≤‡§æ‡§≠‡§æ‡§∞‡•ç‡§•‡•Ä',
      avgSubsidy: '‡§î‡§∏‡§§ ‡§∏‡§¨‡•ç‡§∏‡§ø‡§°‡•Ä',
      amountDisbursed: '‡§µ‡§ø‡§§‡§∞‡§ø‡§§ ‡§∞‡§æ‡§∂‡§ø',
      subsidyRate: '‡§∏‡§¨‡•ç‡§∏‡§ø‡§°‡•Ä ‡§¶‡§∞',
      maxAmount: '‡§Ö‡§ß‡§ø‡§ï‡§§‡§Æ ‡§∞‡§æ‡§∂‡§ø',
      beneficiaries: '‡§≤‡§æ‡§≠‡§æ‡§∞‡•ç‡§•‡•Ä',
      applicationDeadline: '‡§Ü‡§µ‡•á‡§¶‡§® ‡§ï‡•Ä ‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§§‡§æ‡§∞‡•Ä‡§ñ',
      eligibilityCriteria: '‡§™‡§æ‡§§‡•ç‡§∞‡§§‡§æ ‡§Æ‡§æ‡§®‡§¶‡§Ç‡§°',
      viewDetails: '‡§µ‡§ø‡§µ‡§∞‡§£ ‡§¶‡•á‡§ñ‡•á‡§Ç',
      applyNow: '‡§Ö‡§¨ ‡§Ü‡§µ‡•á‡§¶‡§® ‡§ï‡§∞‡•á‡§Ç',
      comingSoon: '‡§ú‡§≤‡•ç‡§¶ ‡§Ü ‡§∞‡§π‡§æ ‡§π‡•à',
      getApplicationHelp: '‡§Ü‡§µ‡•á‡§¶‡§® ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§™‡§æ‡§è‡§Ç',
      downloadForms: '‡§´‡•â‡§∞‡•ç‡§Æ ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç',
      needHelp: '‡§Ü‡§µ‡•á‡§¶‡§® ‡§Æ‡•á‡§Ç ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ö‡§æ‡§π‡§ø‡§è?',
      fieldOfficersHelp: '‡§π‡§Æ‡§æ‡§∞‡•á ‡§´‡•Ä‡§≤‡•ç‡§° ‡§ë‡§´‡§ø‡§∏‡§∞ ‡§∏‡§¨‡•ç‡§∏‡§ø‡§°‡•Ä ‡§Ü‡§µ‡•á‡§¶‡§® ‡§î‡§∞ ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•à‡§Ç'
    },
    te: {
      title: '‡∞™‡±ç‡∞∞‡∞≠‡±Å‡∞§‡±ç‡∞µ ‡∞∞‡∞æ‡∞ú‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç',
      description: '‡∞™‡±Å‡∞∞‡±Å‡∞ó‡±Å‡∞Æ‡∞Ç‡∞¶‡±Å‡∞≤‡±Å, ‡∞é‡∞∞‡±Å‡∞µ‡±Å‡∞≤‡±Å, ‡∞µ‡∞ø‡∞§‡±ç‡∞§‡∞®‡∞æ‡∞≤‡±Å ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞µ‡±ç‡∞Ø‡∞µ‡∞∏‡∞æ‡∞Ø ‡∞™‡∞∞‡∞ø‡∞ï‡∞∞‡∞æ‡∞≤‡∞ï‡±Å ‡∞Ü‡∞∞‡±ç‡∞•‡∞ø‡∞ï ‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç ‡∞™‡±ä‡∞Ç‡∞¶‡∞Ç‡∞°‡∞ø',
      search: '‡∞™‡±á‡∞∞‡±Å ‡∞≤‡±á‡∞¶‡∞æ ‡∞µ‡∞ø‡∞µ‡∞∞‡∞£ ‡∞¶‡±ç‡∞µ‡∞æ‡∞∞‡∞æ ‡∞∞‡∞æ‡∞ú‡∞∏‡∞π‡∞æ‡∞Ø‡∞æ‡∞≤‡∞®‡±Å ‡∞µ‡±Ü‡∞§‡∞ï‡∞Ç‡∞°‡∞ø...',
      category: '‡∞µ‡∞∞‡±ç‡∞ó‡∞Ç',
      status: '‡∞∏‡±ç‡∞•‡∞ø‡∞§‡∞ø',
      calculator: '‡∞ï‡∞æ‡∞≤‡∞ø‡∞ï‡±ç‡∞Ø‡±Å‡∞≤‡±á‡∞ü‡∞∞‡±ç',
      subsidyCalculator: '‡∞∞‡∞æ‡∞ú‡∞∏‡∞π‡∞æ‡∞Ø ‡∞ï‡∞æ‡∞≤‡∞ø‡∞ï‡±ç‡∞Ø‡±Å‡∞≤‡±á‡∞ü‡∞∞‡±ç',
      calculateBenefits: '‡∞Æ‡±Ä ‡∞™‡±Ü‡∞ü‡±ç‡∞ü‡±Å‡∞¨‡∞°‡∞ø‡∞ï‡∞ø ‡∞∏‡∞Ç‡∞≠‡∞æ‡∞µ‡±ç‡∞Ø ‡∞™‡±ç‡∞∞‡∞Ø‡±ã‡∞ú‡∞®‡∞æ‡∞≤‡∞®‡±Å ‡∞≤‡±Ü‡∞ï‡±ç‡∞ï‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø',
      investmentAmount: '‡∞™‡±Ü‡∞ü‡±ç‡∞ü‡±Å‡∞¨‡∞°‡∞ø ‡∞Æ‡±ä‡∞§‡±ç‡∞§‡∞Ç (‚Çπ)',
      potentialBenefits: '‡∞∏‡∞Ç‡∞≠‡∞æ‡∞µ‡±ç‡∞Ø ‡∞™‡±ç‡∞∞‡∞Ø‡±ã‡∞ú‡∞®‡∞æ‡∞≤‡±Å:',
      activeSchemes: '‡∞∏‡∞ï‡±ç‡∞∞‡∞ø‡∞Ø ‡∞™‡∞•‡∞ï‡∞æ‡∞≤‡±Å',
      totalBeneficiaries: '‡∞Æ‡±ä‡∞§‡±ç‡∞§‡∞Ç ‡∞≤‡∞¨‡±ç‡∞ß‡∞ø‡∞¶‡∞æ‡∞∞‡±Å‡∞≤‡±Å',
      avgSubsidy: '‡∞∏‡∞ó‡∞ü‡±Å ‡∞∞‡∞æ‡∞ú‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç',
      amountDisbursed: '‡∞™‡∞Ç‡∞™‡∞ø‡∞£‡±Ä ‡∞ö‡±á‡∞∏‡∞ø‡∞® ‡∞Æ‡±ä‡∞§‡±ç‡∞§‡∞Ç',
      subsidyRate: '‡∞∞‡∞æ‡∞ú‡∞∏‡∞π‡∞æ‡∞Ø ‡∞∞‡±á‡∞ü‡±Å',
      maxAmount: '‡∞ó‡∞∞‡∞ø‡∞∑‡±ç‡∞ü ‡∞Æ‡±ä‡∞§‡±ç‡∞§‡∞Ç',
      beneficiaries: '‡∞≤‡∞¨‡±ç‡∞ß‡∞ø‡∞¶‡∞æ‡∞∞‡±Å‡∞≤‡±Å',
      applicationDeadline: '‡∞¶‡∞∞‡∞ñ‡∞æ‡∞∏‡±ç‡∞§‡±Å ‡∞ó‡∞°‡±Å‡∞µ‡±Å',
      eligibilityCriteria: '‡∞Ö‡∞∞‡±ç‡∞π‡∞§ ‡∞™‡±ç‡∞∞‡∞Æ‡∞æ‡∞£‡∞æ‡∞≤‡±Å',
      viewDetails: '‡∞µ‡∞ø‡∞µ‡∞∞‡∞æ‡∞≤‡±Å ‡∞ö‡±Ç‡∞°‡∞Ç‡∞°‡∞ø',
      applyNow: '‡∞á‡∞™‡±ç‡∞™‡±Å‡∞°‡±Å ‡∞¶‡∞∞‡∞ñ‡∞æ‡∞∏‡±ç‡∞§‡±Å ‡∞ö‡±á‡∞∏‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø',
      comingSoon: '‡∞§‡±ç‡∞µ‡∞∞‡∞≤‡±ã ‡∞µ‡∞∏‡±ç‡∞§‡±Å‡∞Ç‡∞¶‡∞ø',
      getApplicationHelp: '‡∞¶‡∞∞‡∞ñ‡∞æ‡∞∏‡±ç‡∞§‡±Å ‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç ‡∞™‡±ä‡∞Ç‡∞¶‡∞Ç‡∞°‡∞ø',
      downloadForms: '‡∞´‡∞æ‡∞∞‡∞Æ‡±ç‚Äå‡∞≤‡∞®‡±Å ‡∞°‡±å‡∞®‡±ç‚Äå‡∞≤‡±ã‡∞°‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø',
      needHelp: '‡∞¶‡∞∞‡∞ñ‡∞æ‡∞∏‡±ç‡∞§‡±Å‡∞≤‡∞§‡±ã ‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç ‡∞ï‡∞æ‡∞µ‡∞æ‡∞≤‡∞æ?',
      fieldOfficersHelp: '‡∞Æ‡∞æ ‡∞ï‡±ç‡∞∑‡±á‡∞§‡±ç‡∞∞ ‡∞Ö‡∞ß‡∞ø‡∞ï‡∞æ‡∞∞‡±Å‡∞≤‡±Å ‡∞∞‡∞æ‡∞ú‡∞∏‡∞π‡∞æ‡∞Ø ‡∞¶‡∞∞‡∞ñ‡∞æ‡∞∏‡±ç‡∞§‡±Å‡∞≤‡±Å ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞™‡∞§‡±ç‡∞∞‡∞æ‡∞≤‡∞§‡±ã ‡∞Æ‡±Ä‡∞ï‡±Å ‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞Ö‡∞Ç‡∞¶‡±Å‡∞¨‡∞æ‡∞ü‡±Å‡∞≤‡±ã ‡∞â‡∞®‡±ç‡∞®‡∞æ‡∞∞‡±Å'
    },
    ta: {
      title: '‡ÆÖ‡Æ∞‡Æö‡ØÅ ‡ÆÆ‡Ææ‡Æ©‡Æø‡ÆØ‡Æô‡Øç‡Æï‡Æ≥‡Øç',
      description: '‡Æ™‡ØÇ‡Æö‡Øç‡Æö‡Æø‡Æï‡Øç‡Æï‡Øä‡Æ≤‡Øç‡Æ≤‡Æø‡Æï‡Æ≥‡Øç, ‡Æâ‡Æ∞‡Æô‡Øç‡Æï‡Æ≥‡Øç, ‡Æµ‡Æø‡Æ§‡Øà‡Æï‡Æ≥‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æµ‡Æø‡Æµ‡Æö‡Ææ‡ÆØ ‡Æâ‡Æ™‡Æï‡Æ∞‡Æ£‡Æô‡Øç‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡Æ®‡Æø‡Æ§‡Æø ‡Æâ‡Æ§‡Æµ‡Æø ‡Æ™‡ØÜ‡Æ±‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç',
      search: '‡Æ™‡ØÜ‡ÆØ‡Æ∞‡Øç ‡ÆÖ‡Æ≤‡Øç‡Æ≤‡Æ§‡ØÅ ‡Æµ‡Æø‡Æ≥‡Æï‡Øç‡Æï‡Æ§‡Øç‡Æ§‡Æø‡Æ©‡Øç ‡ÆÆ‡ØÇ‡Æ≤‡ÆÆ‡Øç ‡ÆÆ‡Ææ‡Æ©‡Æø‡ÆØ‡Æô‡Øç‡Æï‡Æ≥‡Øà‡Æ§‡Øç ‡Æ§‡Øá‡Æü‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç...',
      category: '‡Æµ‡Æï‡Øà',
      status: '‡Æ®‡Æø‡Æ≤‡Øà',
      calculator: '‡Æï‡Ææ‡Æ≤‡Øç‡Æï‡ØÅ‡Æ≤‡Øá‡Æü‡Øç‡Æü‡Æ∞‡Øç',
      subsidyCalculator: '‡ÆÆ‡Ææ‡Æ©‡Æø‡ÆØ ‡Æï‡Ææ‡Æ≤‡Øç‡Æï‡ØÅ‡Æ≤‡Øá‡Æü‡Øç‡Æü‡Æ∞‡Øç',
      calculateBenefits: '‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡ÆÆ‡ØÅ‡Æ§‡Æ≤‡ØÄ‡Æü‡Øç‡Æü‡Æø‡Æ±‡Øç‡Æï‡Ææ‡Æ© ‡Æö‡Ææ‡Æ§‡Øç‡Æ§‡Æø‡ÆØ‡ÆÆ‡Ææ‡Æ© ‡Æ™‡Æ≤‡Æ©‡Øç‡Æï‡Æ≥‡Øà‡Æï‡Øç ‡Æï‡Æ£‡Æï‡Øç‡Æï‡Æø‡Æü‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç',
      investmentAmount: '‡ÆÆ‡ØÅ‡Æ§‡Æ≤‡ØÄ‡Æü‡Øç‡Æü‡ØÅ ‡Æ§‡Øä‡Æï‡Øà (‚Çπ)',
      potentialBenefits: '‡Æö‡Ææ‡Æ§‡Øç‡Æ§‡Æø‡ÆØ‡ÆÆ‡Ææ‡Æ© ‡Æ™‡Æ≤‡Æ©‡Øç‡Æï‡Æ≥‡Øç:',
      activeSchemes: '‡Æö‡ØÜ‡ÆØ‡Æ≤‡Æø‡Æ≤‡Øç ‡Æâ‡Æ≥‡Øç‡Æ≥ ‡Æ§‡Æø‡Æü‡Øç‡Æü‡Æô‡Øç‡Æï‡Æ≥‡Øç',
      totalBeneficiaries: '‡ÆÆ‡Øä‡Æ§‡Øç‡Æ§ ‡Æ™‡ÆØ‡Æ©‡Ææ‡Æ≥‡Æø‡Æï‡Æ≥‡Øç',
      avgSubsidy: '‡Æö‡Æ∞‡Ææ‡Æö‡Æ∞‡Æø ‡ÆÆ‡Ææ‡Æ©‡Æø‡ÆØ‡ÆÆ‡Øç',
      amountDisbursed: '‡Æµ‡Æ¥‡Æô‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü ‡Æ§‡Øä‡Æï‡Øà',
      subsidyRate: '‡ÆÆ‡Ææ‡Æ©‡Æø‡ÆØ ‡Æµ‡Æø‡Æï‡Æø‡Æ§‡ÆÆ‡Øç',
      maxAmount: '‡ÆÖ‡Æ§‡Æø‡Æï‡Æ™‡Æü‡Øç‡Æö ‡Æ§‡Øä‡Æï‡Øà',
      beneficiaries: '‡Æ™‡ÆØ‡Æ©‡Ææ‡Æ≥‡Æø‡Æï‡Æ≥‡Øç',
      applicationDeadline: '‡Æµ‡Æø‡Æ£‡Øç‡Æ£‡Æ™‡Øç‡Æ™ ‡Æï‡Æü‡Øà‡Æö‡Æø ‡Æ®‡Ææ‡Æ≥‡Øç',
      eligibilityCriteria: '‡Æ§‡Æï‡ØÅ‡Æ§‡Æø ‡ÆÖ‡Æ≥‡Æµ‡ØÅ‡Æï‡Øã‡Æ≤‡Øç‡Æï‡Æ≥‡Øç',
      viewDetails: '‡Æµ‡Æø‡Æµ‡Æ∞‡Æô‡Øç‡Æï‡Æ≥‡Øà‡Æ™‡Øç ‡Æ™‡Ææ‡Æ∞‡Øç‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç',
      applyNow: '‡Æá‡Æ™‡Øç‡Æ™‡Øã‡Æ§‡ØÅ ‡Æµ‡Æø‡Æ£‡Øç‡Æ£‡Æ™‡Øç‡Æ™‡Æø‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç',
      comingSoon: '‡Æµ‡Æø‡Æ∞‡Øà‡Æµ‡Æø‡Æ≤‡Øç ‡Æµ‡Æ∞‡ØÅ‡ÆÆ‡Øç',
      getApplicationHelp: '‡Æµ‡Æø‡Æ£‡Øç‡Æ£‡Æ™‡Øç‡Æ™ ‡Æâ‡Æ§‡Æµ‡Æø ‡Æ™‡ØÜ‡Æ±‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç',
      downloadForms: '‡Æ™‡Æü‡Æø‡Æµ‡Æô‡Øç‡Æï‡Æ≥‡Øà‡Æ™‡Øç ‡Æ™‡Æ§‡Æø‡Æµ‡Æø‡Æ±‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç',
      needHelp: '‡Æµ‡Æø‡Æ£‡Øç‡Æ£‡Æ™‡Øç‡Æ™‡Æô‡Øç‡Æï‡Æ≥‡Æø‡Æ≤‡Øç ‡Æâ‡Æ§‡Æµ‡Æø ‡Æ§‡Øá‡Æµ‡Øà‡ÆØ‡Ææ?',
      fieldOfficersHelp: '‡Æé‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æï‡Æ≥ ‡ÆÖ‡Æ§‡Æø‡Æï‡Ææ‡Æ∞‡Æø‡Æï‡Æ≥‡Øç ‡ÆÆ‡Ææ‡Æ©‡Æø‡ÆØ ‡Æµ‡Æø‡Æ£‡Øç‡Æ£‡Æ™‡Øç‡Æ™‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡ÆÜ‡Æµ‡Æ£‡Æô‡Øç‡Æï‡Æ≥‡Æø‡Æ≤‡Øç ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡Æâ‡Æ§‡Æµ ‡Æï‡Æø‡Æü‡Øà‡Æï‡Øç‡Æï‡Æø‡Æ©‡Øç‡Æ±‡Æ©‡Æ∞‡Øç'
    },
    ml: {
      title: '‡¥∏‡µº‡¥ï‡µç‡¥ï‡¥æ‡µº ‡¥∏‡¥¨‡µç‡¥∏‡¥ø‡¥°‡¥ø‡¥ï‡µæ',
      description: '‡¥ï‡µÄ‡¥ü‡¥®‡¥æ‡¥∂‡¥ø‡¥®‡¥ø‡¥ï‡µæ, ‡¥µ‡¥≥‡¥ô‡µç‡¥ô‡µæ, ‡¥µ‡¥ø‡¥§‡µç‡¥§‡µÅ‡¥ï‡µæ, ‡¥ï‡¥æ‡µº‡¥∑‡¥ø‡¥ï ‡¥â‡¥™‡¥ï‡¥∞‡¥£‡¥ô‡µç‡¥ô‡µæ ‡¥é‡¥®‡µç‡¥®‡¥ø‡¥µ‡¥Ø‡µç‡¥ï‡µç‡¥ï‡¥æ‡¥Ø‡¥ø ‡¥∏‡¥æ‡¥Æ‡µç‡¥™‡¥§‡µç‡¥§‡¥ø‡¥ï ‡¥∏‡¥π‡¥æ‡¥Ø‡¥Ç ‡¥®‡µá‡¥ü‡µÅ‡¥ï',
      search: '‡¥™‡µá‡¥∞‡µç ‡¥Ö‡¥≤‡µç‡¥≤‡µÜ‡¥ô‡µç‡¥ï‡¥ø‡µΩ ‡¥µ‡¥ø‡¥µ‡¥∞‡¥£‡¥Ç ‡¥â‡¥™‡¥Ø‡µã‡¥ó‡¥ø‡¥ö‡µç‡¥ö‡µç ‡¥∏‡¥¨‡µç‡¥∏‡¥ø‡¥°‡¥ø‡¥ï‡µæ ‡¥§‡¥ø‡¥∞‡¥Ø‡µÅ‡¥ï...',
      category: '‡¥µ‡¥ø‡¥≠‡¥æ‡¥ó‡¥Ç',
      status: '‡¥∏‡µç‡¥•‡¥ø‡¥§‡¥ø',
      calculator: '‡¥ï‡¥æ‡µΩ‡¥ï‡µç‡¥ï‡µÅ‡¥≤‡µá‡¥±‡µç‡¥±‡µº',
      subsidyCalculator: '‡¥∏‡¥¨‡µç‡¥∏‡¥ø‡¥°‡¥ø ‡¥ï‡¥æ‡µΩ‡¥ï‡µç‡¥ï‡µÅ‡¥≤‡µá‡¥±‡µç‡¥±‡µº',
      calculateBenefits: '‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥®‡¥ø‡¥ï‡µç‡¥∑‡µá‡¥™‡¥§‡µç‡¥§‡¥ø‡¥®‡µÅ‡¥≥‡µç‡¥≥ ‡¥∏‡¥æ‡¥ß‡µç‡¥Ø‡¥§‡¥Ø‡µÅ‡¥≥‡µç‡¥≥ ‡¥®‡µá‡¥ü‡µç‡¥ü‡¥ô‡µç‡¥ô‡µæ ‡¥ï‡¥£‡¥ï‡µç‡¥ï‡¥æ‡¥ï‡µç‡¥ï‡µÅ‡¥ï',
      investmentAmount: '‡¥®‡¥ø‡¥ï‡µç‡¥∑‡µá‡¥™ ‡¥§‡µÅ‡¥ï (‚Çπ)',
      potentialBenefits: '‡¥∏‡¥æ‡¥ß‡µç‡¥Ø‡¥§‡¥Ø‡µÅ‡¥≥‡µç‡¥≥ ‡¥®‡µá‡¥ü‡µç‡¥ü‡¥ô‡µç‡¥ô‡µæ:',
      activeSchemes: '‡¥∏‡¥ú‡µÄ‡¥µ ‡¥™‡¥¶‡µç‡¥ß‡¥§‡¥ø‡¥ï‡µæ',
      totalBeneficiaries: '‡¥Æ‡µä‡¥§‡µç‡¥§‡¥Ç ‡¥ó‡µÅ‡¥£‡¥≠‡µã‡¥ï‡µç‡¥§‡¥æ‡¥ï‡µç‡¥ï‡µæ',
      avgSubsidy: '‡¥∂‡¥∞‡¥æ‡¥∂‡¥∞‡¥ø ‡¥∏‡¥¨‡µç‡¥∏‡¥ø‡¥°‡¥ø',
      amountDisbursed: '‡¥µ‡¥ø‡¥§‡¥∞‡¥£‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥§ ‡¥§‡µÅ‡¥ï',
      subsidyRate: '‡¥∏‡¥¨‡µç‡¥∏‡¥ø‡¥°‡¥ø ‡¥®‡¥ø‡¥∞‡¥ï‡µç‡¥ï‡µç',
      maxAmount: '‡¥™‡¥∞‡¥Æ‡¥æ‡¥µ‡¥ß‡¥ø ‡¥§‡µÅ‡¥ï',
      beneficiaries: '‡¥ó‡µÅ‡¥£‡¥≠‡µã‡¥ï‡µç‡¥§‡¥æ‡¥ï‡µç‡¥ï‡µæ',
      applicationDeadline: '‡¥Ö‡¥™‡µá‡¥ï‡µç‡¥∑‡¥æ ‡¥Ö‡¥µ‡¥∏‡¥æ‡¥® ‡¥§‡µÄ‡¥Ø‡¥§‡¥ø',
      eligibilityCriteria: '‡¥Ø‡µã‡¥ó‡µç‡¥Ø‡¥§‡¥æ ‡¥Æ‡¥æ‡¥®‡¥¶‡¥£‡µç‡¥°‡¥ô‡µç‡¥ô‡µæ',
      viewDetails: '‡¥µ‡¥ø‡¥µ‡¥∞‡¥ô‡µç‡¥ô‡µæ ‡¥ï‡¥æ‡¥£‡µÅ‡¥ï',
      applyNow: '‡¥á‡¥™‡µç‡¥™‡µã‡µæ ‡¥Ö‡¥™‡µá‡¥ï‡µç‡¥∑‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï',
      comingSoon: '‡¥â‡¥ü‡µª ‡¥µ‡¥∞‡µÅ‡¥®‡µç‡¥®‡µÅ',
      getApplicationHelp: '‡¥Ö‡¥™‡µá‡¥ï‡µç‡¥∑‡¥æ ‡¥∏‡¥π‡¥æ‡¥Ø‡¥Ç ‡¥®‡µá‡¥ü‡µÅ‡¥ï',
      downloadForms: '‡¥´‡µã‡¥Æ‡µÅ‡¥ï‡µæ ‡¥°‡µó‡µ∫‡¥≤‡µã‡¥°‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï',
      needHelp: '‡¥Ö‡¥™‡µá‡¥ï‡µç‡¥∑‡¥ï‡¥≥‡¥ø‡µΩ ‡¥∏‡¥π‡¥æ‡¥Ø‡¥Ç ‡¥µ‡µá‡¥£‡µã?',
      fieldOfficersHelp: '‡¥û‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥´‡µÄ‡µΩ‡¥°‡µç ‡¥ì‡¥´‡µÄ‡¥∏‡µº‡¥Æ‡¥æ‡µº ‡¥∏‡¥¨‡µç‡¥∏‡¥ø‡¥°‡¥ø ‡¥Ö‡¥™‡µá‡¥ï‡µç‡¥∑‡¥ï‡¥≥‡¥ø‡¥≤‡µÅ‡¥Ç ‡¥°‡µã‡¥ï‡µç‡¥Ø‡µÅ‡¥Æ‡µÜ‡¥®‡µç‡¥±‡µá‡¥∑‡¥®‡¥ø‡¥≤‡µÅ‡¥Ç ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÜ ‡¥∏‡¥π‡¥æ‡¥Ø‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡µª ‡¥≤‡¥≠‡µç‡¥Ø‡¥Æ‡¥æ‡¥£‡µç'
    }
  };

  const t = translations[currentLanguage as keyof typeof translations] || translations.en;

  const calculateDaysLeft = (deadline?: string) => {
    if (!deadline) return null;
    const today = new Date();
    const deadlineDate = new Date(deadline);
    const diffTime = deadlineDate.getTime() - today.getTime();
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
    return diffDays;
  };

  const filteredSchemes = subsidySchemes.filter(scheme => {
    const matchesSearch = scheme.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         scheme.description.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesCategory = selectedCategory === 'all' || scheme.category === selectedCategory;
    const matchesStatus = selectedStatus === 'all' || scheme.status === selectedStatus;
    return matchesSearch && matchesCategory && matchesStatus;
  });

  const calculateBenefit = (scheme: SubsidyScheme, amount: number) => {
    const maxAmountNum = parseInt(scheme.maxAmount.replace(/[‚Çπ,]/g, ''));
    const benefit = Math.min((amount * scheme.subsidyPercent) / 100, maxAmountNum);
    return benefit;
  };

  const handleApplySubsidy = (schemeName: string) => {
    toast({
      title: "Application Started",
      description: `Redirecting to application form for ${schemeName}`,
    });
  };

  return (
    <div className="space-y-6" id="subsidies">
      <div className="text-center space-y-4">
        <h2 className="text-3xl font-bold text-primary">{t.title}</h2>
        <p className="text-muted-foreground">
          {t.description}
        </p>
        
        {/* Search and Filter Controls */}
        <div className="flex flex-col md:flex-row gap-4 max-w-4xl mx-auto">
          <div className="relative flex-1">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground" />
            <Input
              placeholder={t.search}
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="pl-10"
            />
          </div>
          <Select value={selectedCategory} onValueChange={setSelectedCategory}>
            <SelectTrigger className="w-full md:w-48">
              <Filter className="w-4 h-4 mr-2" />
              <SelectValue placeholder={t.category} />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="all">All Categories</SelectItem>
              <SelectItem value="pesticide">Pesticides</SelectItem>
              <SelectItem value="fertilizer">Fertilizers</SelectItem>
              <SelectItem value="seeds">Seeds</SelectItem>
              <SelectItem value="equipment">Equipment</SelectItem>
              <SelectItem value="irrigation">Irrigation</SelectItem>
            </SelectContent>
          </Select>
          <Select value={selectedStatus} onValueChange={setSelectedStatus}>
            <SelectTrigger className="w-full md:w-48">
              <SelectValue placeholder={t.status} />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="all">All Status</SelectItem>
              <SelectItem value="active">Active</SelectItem>
              <SelectItem value="closing-soon">Closing Soon</SelectItem>
              <SelectItem value="upcoming">Upcoming</SelectItem>
            </SelectContent>
          </Select>
          <Button 
            variant="outline" 
            onClick={() => setShowCalculator(!showCalculator)}
            className="w-full md:w-auto"
          >
            <Calculator className="w-4 h-4 mr-2" />
            {t.calculator}
          </Button>
        </div>

        {/* Budget Calculator */}
        {showCalculator && (
          <Card className="max-w-md mx-auto">
            <CardHeader>
              <CardTitle className="text-lg">Subsidy Calculator</CardTitle>
              <CardDescription>Calculate potential benefits for your investment</CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div>
                <label className="text-sm font-medium">Investment Amount (‚Çπ)</label>
                <Input
                  type="number"
                  placeholder="Enter amount"
                  value={budget}
                  onChange={(e) => setBudget(e.target.value)}
                />
              </div>
              {budget && filteredSchemes.length > 0 && (
                <div className="space-y-2">
                  <h4 className="text-sm font-medium">Potential Benefits:</h4>
                  {filteredSchemes.slice(0, 3).map((scheme, idx) => {
                    const benefit = calculateBenefit(scheme, parseInt(budget) || 0);
                    return (
                      <div key={idx} className="flex justify-between text-sm">
                        <span>{scheme.name}:</span>
                        <span className="font-bold text-primary">‚Çπ{benefit.toLocaleString()}</span>
                      </div>
                    );
                  })}
                </div>
              )}
            </CardContent>
          </Card>
        )}
      </div>

      {/* Summary Stats */}
      <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-8">
        {[
          { label: 'Active Schemes', value: '12', color: 'text-success' },
          { label: 'Total Beneficiaries', value: '13.2K', color: 'text-primary' },
          { label: 'Avg Subsidy', value: '60%', color: 'text-accent' },
          { label: 'Amount Disbursed', value: '‚Çπ2.4Cr', color: 'text-secondary' }
        ].map((stat, index) => (
          <Card key={index} className="text-center p-4">
            <div className={`text-2xl font-bold ${stat.color}`}>{stat.value}</div>
            <div className="text-sm text-muted-foreground">{stat.label}</div>
          </Card>
        ))}
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {filteredSchemes.length > 0 ? filteredSchemes.map((scheme, index) => {
          const daysLeft = calculateDaysLeft(scheme.deadline);
          
          return (
            <Card key={index} className="hover:shadow-lg transition-all duration-300 group">
              <CardHeader>
                <div className="flex items-start justify-between">
                  <div className="space-y-2">
                    <div className="flex items-center gap-2">
                      <span className="text-2xl">{categoryIcons[scheme.category]}</span>
                      <CardTitle className="text-lg group-hover:text-primary transition-colors">
                        {scheme.name}
                      </CardTitle>
                    </div>
                    <div className="flex gap-2">
                      <Badge className={categoryColors[scheme.category]} variant="secondary">
                        {scheme.category}
                      </Badge>
                      <Badge className={statusColors[scheme.status]} variant="secondary">
                        {scheme.status === 'closing-soon' ? 'Closing Soon' : scheme.status}
                      </Badge>
                    </div>
                  </div>
                </div>
                <CardDescription className="leading-relaxed">
                  {scheme.description}
                </CardDescription>
              </CardHeader>
              
              <CardContent className="space-y-4">
                {/* Subsidy Details */}
                <div className="grid grid-cols-2 gap-4">
                  <div className="text-center p-3 bg-primary/5 rounded-lg">
                    <div className="text-2xl font-bold text-primary">{scheme.subsidyPercent}%</div>
                    <div className="text-sm text-muted-foreground">Subsidy Rate</div>
                  </div>
                  <div className="text-center p-3 bg-secondary/5 rounded-lg">
                    <div className="text-lg font-bold text-secondary">{scheme.maxAmount}</div>
                    <div className="text-sm text-muted-foreground">Max Amount</div>
                  </div>
                </div>

                {/* Progress and Stats */}
                <div className="space-y-2">
                  <div className="flex justify-between items-center">
                    <span className="text-sm font-medium flex items-center gap-2">
                      <Users className="w-4 h-4" />
                      Beneficiaries
                    </span>
                    <span className="text-sm font-bold">{scheme.beneficiaries.toLocaleString()}</span>
                  </div>
                  <Progress value={75} className="h-2" />
                </div>

                {/* Deadline */}
                {scheme.deadline && (
                  <div className="flex items-center justify-between p-3 bg-warning/5 rounded-lg border border-warning/20">
                    <div className="flex items-center gap-2">
                      <Calendar className="w-4 h-4 text-warning" />
                      <span className="font-medium">Application Deadline</span>
                    </div>
                    <div className="text-right">
                      <div className="font-bold text-warning">
                        {daysLeft && daysLeft > 0 ? `${daysLeft} days left` : 'Deadline passed'}
                      </div>
                      <div className="text-xs text-muted-foreground">
                        {new Date(scheme.deadline).toLocaleDateString('en-IN')}
                      </div>
                    </div>
                  </div>
                )}

                {/* Eligibility */}
                <div className="space-y-2">
                  <h4 className="font-medium flex items-center gap-2">
                    <Target className="w-4 h-4 text-accent" />
                    Eligibility Criteria
                  </h4>
                  <ul className="space-y-1">
                    {scheme.eligibility.slice(0, 2).map((criteria, idx) => (
                      <li key={idx} className="text-sm text-muted-foreground flex items-center gap-2">
                        <CheckCircle className="w-3 h-3 text-success flex-shrink-0" />
                        {criteria}
                      </li>
                    ))}
                    {scheme.eligibility.length > 2 && (
                      <li className="text-sm text-accent">
                        +{scheme.eligibility.length - 2} more criteria
                      </li>
                    )}
                  </ul>
                </div>

                {/* Action Buttons */}
                <div className="flex gap-2 pt-2">
                  <Button variant="outline" className="flex-1">
                    View Details
                  </Button>
                  <Button 
                    className="flex-1 bg-gradient-to-r from-primary to-primary-glow"
                    disabled={scheme.status === 'upcoming'}
                    onClick={() => handleApplySubsidy(scheme.name)}
                  >
                    {scheme.status === 'upcoming' ? 'Coming Soon' : 'Apply Now'}
                    {scheme.status !== 'upcoming' && <ArrowRight className="w-4 h-4 ml-1" />}
                  </Button>
                </div>
              </CardContent>
            </Card>
          );
        }) : (
          <div className="col-span-full text-center py-12 text-muted-foreground">
            <Gift className="w-16 h-16 mx-auto mb-4 opacity-50" />
            <h3 className="text-lg font-medium mb-2">No subsidies found</h3>
            <p>Try adjusting your search criteria or filters</p>
            <Button 
              variant="outline" 
              className="mt-4"
              onClick={() => {
                setSearchTerm('');
                setSelectedCategory('all');
                setSelectedStatus('all');
              }}
            >
              Clear Filters
            </Button>
          </div>
        )}
      </div>

      {/* Call to Action */}
      <div className="text-center space-y-4 p-8 bg-gradient-to-r from-primary/5 to-accent/5 rounded-lg">
        <h3 className="text-xl font-bold">Need Help with Applications?</h3>
        <p className="text-muted-foreground">
          Our field officers are available to assist you with subsidy applications and documentation
        </p>
        <div className="flex gap-4 justify-center">
          <Button variant="hero" size="lg">
            <Gift className="w-4 h-4 mr-2" />
            Get Application Help
          </Button>
          <Button variant="outline" size="lg">
            Download Forms
          </Button>
        </div>
      </div>
    </div>
  );
};

export default Subsidies;